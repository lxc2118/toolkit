<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tg.db.sync.newtg.pojo.account.Account">
<resultMap type="com.tg.db.sync.newtg.pojo.account.Account" id="BaseResultMap">
	<result column="id" property="id" jdbcType="INTEGER"/>
	<result column="account" property="account" jdbcType="VARCHAR"/>
	<result column="password" property="password" jdbcType="VARCHAR"/>
	<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
	<result column="login_times" property="loginTimes" jdbcType="INTEGER"/>
	<result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
	<result column="status" property="status" jdbcType="VARCHAR"/>
	<result column="type" property="type" jdbcType="VARCHAR"/>
	<result column="user_id" property="userId" jdbcType="INTEGER"/>
	<result column="original_account" property="originalAccount" jdbcType="VARCHAR"/>
	<result column="original_password" property="originalPassword" jdbcType="VARCHAR"/>
	<result column="original_user_id" property="originalUserId" jdbcType="INTEGER"/>
	<result column="original_site_code" property="originalSiteCode" jdbcType="VARCHAR"/>
	<result column="open_id" property="openId" jdbcType="VARCHAR"/>
</resultMap>

<sql id="cols">
	 t.id
	, t.account
	, t.password
	, t.create_time
	, t.update_time
	, t.login_times
	, t.last_login_time
	, t.status
	, t.type
	, t.user_id
	, t.original_account
	, t.original_password
	, t.original_user_id
	, t.original_site_code
	, t.open_id
</sql>

<select id="findLimit" resultMap="BaseResultMap" parameterType="com.tg.db.common.Limit" >
	select 
	<include refid="cols" />
	from account t limit #{limitStart},#{limitEnd}
</select>

<select id="get" resultMap="BaseResultMap" parameterType="Object">
	select <include refid="cols" /> from account t where 
			id=#{value}
		
</select>

<insert id="insert" parameterType="com.tg.db.sync.newtg.pojo.account.Account">
	insert into account (
	 id
		, account
		, password
		, create_time
		, update_time
		, login_times
		, last_login_time
		, status
		, type
		, user_id
		, original_account
		, original_password
		, original_user_id
		, original_site_code
		, open_id
		)values(
	 #{id}
		, #{account}
		, #{password}
		, #{createTime}
		, #{updateTime}
		, #{loginTimes}
		, #{lastLoginTime}
		, #{status}
		, #{type}
		, #{userId}
		, #{originalAccount}
		, #{originalPassword}
		, #{originalUserId}
		, #{originalSiteCode}
		, #{openId}
	)
</insert>
</mapper>